---
- name: Windows Update with Defender Intelligence Fixes
  hosts: windows
  gather_facts: false
  vars:
    reboot_timeout: 900  # 15 minutes
    update_timeout: 7200  # 2 hours for Defender updates

  tasks:
    - name: Wake up the PC first
      delegate_to: localhost
      ansible.builtin.shell: |
        MAC={{ mac_address }}
        IP={{ ip_address }}
        BROADCAST={{ broadcast }}

        echo "Attempting to wake PC at $IP with MAC $MAC..."

        # Try multiple methods
        echo "Method 1: Direct IP with wakeonlan"
        wakeonlan -i $IP $MAC

        echo "Method 2: Broadcast with wakeonlan"
        wakeonlan -i $BROADCAST $MAC

        echo "Method 3: Default broadcast with wakeonlan"
        wakeonlan $MAC

        echo "Method 4: Port 7 with wakeonlan"
        wakeonlan -p 7 $MAC
      changed_when: false

    - name: Wait for system to be responsive
      ansible.builtin.wait_for_connection:
        timeout: 300

    - name: Gather Windows facts
      ansible.builtin.setup:

    - name: Display system information
      ansible.builtin.debug:
        msg: |
          Computer: {{ ansible_hostname }}
          OS: {{ ansible_os_name }} ({{ ansible_distribution_version }})
          Architecture: {{ ansible_architecture }}
          Last Boot: {{ ansible_lastboot }}
          OS Family: {{ ansible_os_family }}
          Installation Type: {{ ansible_os_installation_type }}

    - name: Temporarily disable Windows Defender real-time protection
      ansible.windows.win_shell: |
        try {
          Set-MpPreference -DisableRealtimeMonitoring $true
          Write-Output "Defender real-time protection disabled"
        } catch {
          Write-Output "Could not disable Defender: $($_.Exception.Message)"
        }
      register: defender_disable
      become: true
      ignore_errors: true

    - name: Display Defender disable result
      ansible.builtin.debug:
        var: defender_disable.stdout_lines

    - name: Stop Windows Update service temporarily # noqa: ignore-errors
      ansible.windows.win_service:
        name: "{{ item }}"
        state: stopped
      loop:
        - wuauserv
      become: true
      ignore_errors: true

    - name: Wait for services to fully stop
      ansible.builtin.pause:
        seconds: 10

    - name: Start Windows Update service
      ansible.windows.win_service:
        name: wuauserv
        state: started
        start_mode: auto
      become: true

    - name: Search for available updates
      ansible.windows.win_updates:
        state: searched
        category_names:
          - CriticalUpdates
          - SecurityUpdates
          - UpdateRollups
          - Updates
          - DefinitionUpdates
      register: available_updates
      become: true

    - name: Separate Defender updates from other updates
      ansible.builtin.set_fact:
        defender_updates: "{{ available_updates.updates | dict2items | selectattr('value.categories', 'search', 'Definition Updates') | list }}"
        other_updates: "{{ available_updates.updates | dict2items | rejectattr('value.categories', 'search', 'Definition Updates') | list }}"

    - name: Display update breakdown
      ansible.builtin.debug:
        msg: |
          Total updates: {{ available_updates.found_update_count }}
          Defender updates: {{ defender_updates | length }}
          Other updates: {{ other_updates | length }}

    - name: Update Defender signatures via PowerShell
      ansible.windows.win_shell: |
        try {
          Update-MpSignature -UpdateSource MicrosoftUpdateServer
          Write-Output "Defender signatures updated successfully via PowerShell"
        } catch {
          Write-Output "PowerShell signature update failed: $($_.Exception.Message)"
        }
      register: defender_ps_update
      when:
        - defender_updates | length > 0
      become: true
      ignore_errors: true

    - name: Install other critical and security updates
      ansible.windows.win_updates:
        category_names:
          - CriticalUpdates
          - SecurityUpdates
          - UpdateRollups
          - Updates
        reboot: false
      register: other_result
      when: other_updates | length > 0
      become: true
      ignore_errors: true

    - name: Display other update results
      ansible.builtin.debug:
        msg: |
          Other updates: {{ 'Success' if not other_result.failed else 'Failed' }}
          {% if other_result.failed %}
          Error: {{ other_result.msg | default('Unknown error') }}
          {% else %}
          Installed: {{ other_result.installed_update_count | default(0) }}
          {% endif %}
      when: other_updates | length > 0

    - name: Re-enable Windows Defender real-time protection
      ansible.windows.win_shell: |
        try {
          Set-MpPreference -DisableRealtimeMonitoring $false
          Write-Output "Defender real-time protection re-enabled"
        } catch {
          Write-Output "Could not re-enable Defender: $($_.Exception.Message)"
        }
      register: defender_enable
      become: true
      ignore_errors: true

    - name: Check if reboot is required
      ansible.builtin.set_fact:
        reboot_needed: "{{ (other_result.reboot_required | default(false)) }}"

    - name: Reboot if required
      ansible.windows.win_reboot:
        reboot_timeout: "{{ reboot_timeout }}"
        post_reboot_delay: 60
      when: reboot_needed | bool
      become: true

    - name: Wait for system to be responsive after reboot
      ansible.builtin.wait_for_connection:
        timeout: 300
      when: reboot_needed | bool

    - name: Final update check
      ansible.windows.win_updates:
        state: searched
      register: final_check
      become: true

    - name: Final status
      ansible.builtin.debug:
        msg: |
          Update Summary:
          - Defender updates processed: {{ defender_updates | length }}
          - Other updates processed: {{ other_updates | length }}
          - Remaining updates: {{ final_check.found_update_count }}
          - System rebooted: {{ reboot_needed | bool }}
          - System uptime: {{ ansible_uptime_seconds // 3600 }} hours
          - Last update run: {{ ansible_date_time.iso8601 }}
